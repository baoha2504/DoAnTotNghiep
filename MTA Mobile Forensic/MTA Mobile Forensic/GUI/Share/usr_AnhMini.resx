<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbAnh.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>